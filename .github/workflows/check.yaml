name: Check
on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  install:
    strategy:
      fail-fast: false
      matrix:
        force: ["y", "n"]
    runs-on: windows-2025
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install dotfiles
        run: . ./install.ps1 -Force "${{ matrix.force }}"
      - name: Show "$HOME"
        shell: bash
        run: ls -la "$HOME"
      - name: Test installed files
        shell: bash
        run: |
          set -exo pipefail
          workspace=$(echo "/${{ github.workspace }}" | tr "\\" "/" | tr -d ":" | tr '[:upper:]' '[:lower:]')
          [ -f "$HOME/.textlintrc.json" ] && [ "$(readlink -f "$HOME/.textlintrc.json")" = "${workspace}/.textlintrc.json" ]
          [ -f "$HOME/.wslconfig" ] && [ "$(readlink -f "$HOME/.wslconfig")" = "${workspace}/.wslconfig" ]
          [ -f "$HOME/.config/git/config" ] && [ "$(readlink -f "$HOME/.config/git/config")" = "${workspace}/HOME/.config/git/config" ]
          [ -f "$HOME/.config/git/ignore" ] && [ "$(readlink -f "$HOME/.config/git/ignore")" = "${workspace}/HOME/.config/git/ignore" ]
          [ -f "$HOME/.ssh/config" ] && [ "$(readlink -f "$HOME/.ssh/config")" = "${workspace}/HOME/.ssh/config" ]
          [ -f "$HOME/.ssh/config.d/aws.conf" ] && [ "$(readlink -f "$HOME/.ssh/config.d/aws.conf")" = "${workspace}/HOME/.ssh/config.d/aws.conf" ]
          [ -f "$HOME/.ssh/config.d/github.conf" ] && [ "$(readlink -f "$HOME/.ssh/config.d/github.conf")" = "${workspace}/HOME/.ssh/config.d/github.conf" ]
          [ -f "$HOME/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json" ] && [ "$(readlink -f "$HOME/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json")" = "${workspace}/HOME/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json" ]
          [ -f "$HOME/AppData/Roaming/Code/User/settings.json" ] && [ "$(readlink -f "$HOME/AppData/Roaming/Code/User/settings.json")" = "${workspace}/HOME/AppData/Roaming/Code/User/settings.json" ]
